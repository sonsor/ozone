So first options array provided to a class, that class will resposible
initicate the main page and iterate each
element and pass to builder class where the builder class make cases of
eac element according to their type.
here is some layout elements

1) Header
2) Footer
3) Nav
4) link

Then there will be a class name Page that have following structure

Page {
    title String
    header <Object> iElement
    footer <Object> iElement
    nav <object> iteratable
    elements <Array> iElement

    render(): String
    close(): string
}

so render function iterate each element and push main and sub sections in stack and
everty time get new section pop all stack and close them. at the end check if not
empty then pop all

iSection {
    open(): string
    close(): string
}

iSection will be implemented on element type page and element type section.

iElement {
    render(): string
}

this will implement on all the elements except page and section


iField {
    setValue(): void
    getValue(): string|array
}
the iField interface will implement on form elements only

abstract Element
Text extends Element
TextArea extends Element
Select extends Element
MultiSelect extends Element
RadioBox extends Element
CheckBox extends Element
File extends Element
Page extend Element
Section extends Element

Builder
